<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" hide="hideCanvasHandler(event)" show="showCanvasHandler(event)" width="1012" height="577"  >

	<mx:Metadata>
		[Event(name="BackLabelClickedEvent", type="flash.events.Event")]
		[Event(name="OpenWebsiteStatBrowserCanvasEvent", type="cAllPurposeEvent")]
		[Event(name="OpenWebsiteCreatorWindowEvent", type="cCreateWebsiteEvent")]
		[Event(name="EditWebsiteLabelClickedEvent", type="cEditWebsiteEvent")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.events.TweenEvent;
			import mx.effects.Fade;
			import mx.effects.Move;
			import mx.effects.Tween;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							 GUI EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Called when the user clicks on the edit label.
			 */
			private function backLabelClickHandler(event:Event):void
			{
				var e:Event = new Event("BackLabelClickedEvent");
				this.dispatchEvent(e);
			}
			
			/**
			 * 	Called when the user hovers the mouse over the back label.
			 */
			private function backLabelRollOverHandler(event:Event):void
			{
				mBackLabel.setStyle("color", "0xFF6666");
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the back label.
			 */
			private function backLabelRollOutHandler(event:Event):void
			{
				mBackLabel.setStyle("color", "0x11d30c");
			}
			
			/**
			 * 	Called when the user clicks on the edit label.
			 */
			private function editLabelClickHandler(event:Event):void
			{
				
			}
			
			/**
			 * 	Called when the user hovers the mouse over the edit label.
			 */
			private function editLabelRollOverHandler(event:Event):void
			{
				mEditLabel.setStyle("color", "0xFF6666");
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the edit label.
			 */
			private function editLabelRollOutHandler(event:Event):void
			{
				mEditLabel.setStyle("color", "0x11d30c");
			}
			
			/**
			 * 	Called when the user clicks on the add website label.
			 */
			private function addWebsiteClickHandler(event:Event):void
			{
				var e:cCreateWebsiteEvent = new cCreateWebsiteEvent("OpenWebsiteCreatorWindowEvent");
				e.mCommunityGroupId = mCommGroupId;
				this.dispatchEvent(e);
			}
			
			/**
			 * 	Called when the user hovers the mouse over the add website label.
			 */
			private function addWebsiteRollOverHandler(event:Event):void
			{
				mAddNewWebsiteLabel.setStyle("color", "0xFF6666");
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the add website label.
			 */
			private function addWebsiteRollOutHandler(event:Event):void
			{
				mAddNewWebsiteLabel.setStyle("color", "0x11d30c");
			}
			
			/**
			 * 	Called when the user clicks on the remove website label.
			 */
			private function removeWebsiteClickHandler(event:Event):void
			{
				if(mRemoveWebsitesLabel.enabled) {
					if(mMyWebsitesVBox.getChildren().length > 0) {
						var i:int = 0;
						for(i; i < mMyWebsitesVBox.getChildren().length; i++) {
							if(mMyWebsitesVBox.getChildAt(i) is cWebsiteGraphic) {
								var websiteGraphic:cWebsiteGraphic = cWebsiteGraphic(mMyWebsitesVBox.getChildAt(i));
								websiteGraphic.showRemoveWebsiteLabel();
							}
						}
						mMyWebsitesVBox.setStyle("backgroundColor", "0x000000");
						mMyWebsitesAllWebsitesVBox.setStyle("backgroundColor", "0x000000");
						
						// animate
						var moveSeparator:Move = new Move();
						moveSeparator.xFrom = mSeparator1.x;
						moveSeparator.xTo = mSeparator1.x - 50;
						moveSeparator.target = mSeparator1;
						moveSeparator.duration = 500;
						moveSeparator.play();
						
						var moveEditWebLabel:Move = new Move();
						moveEditWebLabel.xFrom = mEditWebsiteLabel.x;
						moveEditWebLabel.xTo = mEditWebsiteLabel.x - 50;
						moveEditWebLabel.target = mEditWebsiteLabel;
						moveEditWebLabel.duration = 500;
						moveEditWebLabel.play();		
						
						var move:Move = new Move();
						move.xFrom = mRemoveWebsitesLabel.x;
						move.xTo = mRemoveWebsitesLabel.x - 50;
						move.target = mRemoveWebsitesLabel;
						move.duration = 500;
						move.play();
						
						mSmallXRemoveLabel.visible = true;
						var fade:Fade = new Fade();
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						fade.duration = 500;
						fade.target = mSmallXRemoveLabel;
						fade.play();
						
						mRemoveWebsitesLabel.enabled = false;
						mSeparator1.enabled = false;
						mEditWebsiteLabel.enabled = false;
						mMyWebsitesAllWebsitesVBox.enabled = false;
					}
					else { // since there are no community groups registered the action is not allowed and the
						   // user should be informed
							Alert.show("There are currently no websites registered with this community. There is nothing to remove.",
									   "Action Not Allowed");
						 }
				}
			}
			
			
			/**
			 * 	Called when the user clicks on the edit website label.
			 */
			private function editWebsiteClickHandler(event:Event):void
			{
				if(mRemoveWebsitesLabel.enabled) {
					if(mMyWebsitesVBox.getChildren().length > 0) {
						var i:int = 0;
						for(i; i < mMyWebsitesVBox.getChildren().length; i++) {
							if(mMyWebsitesVBox.getChildAt(i) is cWebsiteGraphic) {
								var websiteGraphic:cWebsiteGraphic = cWebsiteGraphic(mMyWebsitesVBox.getChildAt(i));
								websiteGraphic.showEditWebsiteLabel();
							}
						}
						mMyWebsitesVBox.setStyle("backgroundColor", "0x000000");
						mMyWebsitesAllWebsitesVBox.setStyle("backgroundColor", "0x000000");
						
						// animate
						var moveEditWebLabel:Move = new Move();
						moveEditWebLabel.xFrom = mEditWebsiteLabel.x;
						moveEditWebLabel.xTo = mEditWebsiteLabel.x - 30;
						moveEditWebLabel.target = mEditWebsiteLabel;
						moveEditWebLabel.duration = 500;
						moveEditWebLabel.play();		
						
						mSmallXEditLabel.visible = true;
						var fade:Fade = new Fade();
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						fade.duration = 500;
						fade.target = mSmallXEditLabel;
						fade.play();
						
						mRemoveWebsitesLabel.enabled = false;
						mSeparator1.enabled = false;
						mEditWebsiteLabel.enabled = false;
						mMyWebsitesAllWebsitesVBox.enabled = false;
					}
					else { // since there are no community groups registered the action is not allowed and the
						   // user should be informed
							Alert.show("There are currently no websites registered with this community. There is nothing to edit.",
									   "Action Not Allowed");
						 }
				}
			}
			
			/**
			 * 
			 */
			private function smallXRemoveClickHandler(event:Event):void
			{
				var i:int = 0;
				for(i; i < mMyWebsitesVBox.getChildren().length; i++) {
					if(mMyWebsitesVBox.getChildAt(i) is cWebsiteGraphic) {
						var websiteGraphic:cWebsiteGraphic = cWebsiteGraphic(mMyWebsitesVBox.getChildAt(i));
						websiteGraphic.hideRemoveWebsiteLabel();
					}
				}
				mMyWebsitesVBox.setStyle("backgroundColor", "0xffffff");
				mMyWebsitesAllWebsitesVBox.setStyle("backgroundColor", "0xffffff");
				
				// animate
				var move:Move = new Move();
				move.xFrom = mRemoveWebsitesLabel.x;
				move.xTo = mRemoveWebsitesLabel.x + 50;
				move.target = mRemoveWebsitesLabel;
				move.duration = 500;
				move.play();
					
				var fade:Fade = new Fade();
				fade.alphaFrom = 1;
				fade.alphaTo = 0;
				fade.duration = 500;
				fade.target = mSmallXRemoveLabel;
				fade.play();
				
				mSmallXRemoveLabel.visible = false;
				
				var moveSeparator:Move = new Move();
				moveSeparator.xFrom = mSeparator1.x;
				moveSeparator.xTo = mSeparator1.x + 50;
				moveSeparator.target = mSeparator1;
				moveSeparator.duration = 500;
				moveSeparator.play();
				
				var moveEditWebLabel:Move = new Move();
				moveEditWebLabel.xFrom = mEditWebsiteLabel.x;
				moveEditWebLabel.xTo = mEditWebsiteLabel.x + 50;
				moveEditWebLabel.target = mEditWebsiteLabel;
				moveEditWebLabel.duration = 500;
				moveEditWebLabel.play();		
				
				mRemoveWebsitesLabel.enabled = true;
				mSeparator1.enabled = true;
				mEditWebsiteLabel.enabled = true;
				mMyWebsitesAllWebsitesVBox.enabled = true;
			}
			
			/**
			 * 
			 */
			private function smallXEditClickHandler(event:Event):void
			{
				var i:int = 0;
				for(i; i < mMyWebsitesVBox.getChildren().length; i++) {
					if(mMyWebsitesVBox.getChildAt(i) is cWebsiteGraphic) {
						var websiteGraphic:cWebsiteGraphic = cWebsiteGraphic(mMyWebsitesVBox.getChildAt(i));
						websiteGraphic.hideEditWebsiteLabel();
					}
				}
				mMyWebsitesVBox.setStyle("backgroundColor", "0xffffff");
				mMyWebsitesAllWebsitesVBox.setStyle("backgroundColor", "0xffffff");
				
				// animate					
				var fade:Fade = new Fade();
				fade.alphaFrom = 1;
				fade.alphaTo = 0;
				fade.duration = 500;
				fade.target = mSmallXEditLabel;
				fade.play();
				
				mSmallXEditLabel.visible = false;
				
				var moveEditWebLabel:Move = new Move();
				moveEditWebLabel.xFrom = mEditWebsiteLabel.x;
				moveEditWebLabel.xTo = mEditWebsiteLabel.x + 30;
				moveEditWebLabel.target = mEditWebsiteLabel;
				moveEditWebLabel.duration = 500;
				moveEditWebLabel.play();		
				
				mRemoveWebsitesLabel.enabled = true;
				mSeparator1.enabled = true;
				mEditWebsiteLabel.enabled = true;
				mMyWebsitesAllWebsitesVBox.enabled = true;
			}
			
			/**
			 * 	Called when the user hovers the mouse over the remove website label.
			 */
			private function removeWebsiteRollOverHandler(event:Event):void
			{
				if(mRemoveWebsitesLabel.enabled) {
					mRemoveWebsitesLabel.setStyle("color", "0xFF6666");
				}
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the remove website label.
			 */
			private function removeWebsiteRollOutHandler(event:Event):void
			{
				if(mRemoveWebsitesLabel.enabled) {
					mRemoveWebsitesLabel.setStyle("color", "0x11d30c");
				}
			}
			
			/**
			 * 	Called when the user hovers the mouse over the edit website label.
			 */
			private function editWebsiteRollOverHandler(event:Event):void
			{
				if(mEditWebsiteLabel.enabled) {
					mEditWebsiteLabel.setStyle("color", "0xFF6666");
				}
			}
			
			/**
			 * 	Called when the user hovers the mouse away from the edit website label.
			 */
			private function editWebsiteRollOutHandler(event:Event):void
			{
				if(mEditWebsiteLabel.enabled) {
					mEditWebsiteLabel.setStyle("color", "0x11d30c");
				}
			}
			
			/**
			 * 	Event handler called when the user clicks on the website graphic whithin this canvas.
			 * 	Fires an event signaling that a website has been selected by the user.
			 */
			private function websiteGraphicClickedHandler(event:cAllPurposeEvent):void
			{
				if(mRemoveWebsitesLabel.enabled) {
					var e:cAllPurposeEvent = new cAllPurposeEvent("OpenWebsiteStatBrowserCanvasEvent");
					e.mWebsiteName = event.mWebsiteName;
					e.mWebsiteURL = event.mWebsiteURL;
					e.mWebsiteType = event.mWebsiteType;
					e.mWebsiteCreatedTime = event.mWebsiteCreatedTime;
					e.mCommGroupId = mCommGroupId;
					this.dispatchEvent(e);
				}
			}
			
			/**
			 * 	Event handler called when the user clicks on the edit website label whithin this a website graphic.
			 * 	Fires an event signaling that the user wants to edit the website.
			 */
			private function editWebsiteHandler(event:cEditWebsiteEvent):void
			{
				var e:cEditWebsiteEvent = new cEditWebsiteEvent("EditWebsiteLabelClickedEvent");
				// COPY event data members to e
				this.dispatchEvent(e);
			}
			
			/**
			 * 
			 */
			private function websiteStaticGraphicClickedHandler(event:cAccordionKeywordGraphicEvent):void
			{
				Alert.show("Hello");
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							 CANVAS EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 *  Event handler called when this canvas opens.
			 */
			private function showCanvasHandler(event:Event):void
			{
				/**
				 * 	Load in the websites pertaining to the community group selected
				 */
				mMyWebsitesVBox.removeAllChildren();
				mMyWebsitesAllWebsitesVBox.removeAllChildren();
				
				var i:int;
				var delay:int = 100;
				for(i = 0; i < mWebsites.length; i++) {
					var websiteEntry:cWebsiteEntry = cWebsiteEntry(mWebsites.getItemAt(i));
					var websiteGraphic:cWebsiteGraphic = new cWebsiteGraphic();
					websiteGraphic.addEventListener("cWebsiteGraphicClickedEvent", websiteGraphicClickedHandler);
					websiteGraphic.addEventListener("cEditWebsiteEvent", editWebsiteHandler);
					websiteGraphic.updateInformation(websiteEntry.mName,
												     websiteEntry.mURL,
												     websiteEntry.mType,
												     websiteEntry.mCreatedTime.toString());
					mMyWebsitesVBox.addChild(websiteGraphic);
					
					websiteGraphic.alpha = 0.3;
					var fade:Fade = new Fade();
					fade.alphaFrom = 0.3;
					fade.alphaTo = 0.8;
					fade.duration = 500;
					fade.startDelay = delay;
					fade.target = websiteGraphic;
					fade.play();
					
					delay+=200;		
				}
				
				/**
				 * 	Load in all websites
				 */
				for(i = 0; i < mWebsites.length; i++) {
					websiteEntry = cWebsiteEntry(mWebsites.getItemAt(i));
					var websiteStaticGraphic:cWebsiteStaticLargeGraphic = new cWebsiteStaticLargeGraphic();
					websiteStaticGraphic.addEventListener("cWebsiteStaticLargeGraphicClickedEvent", websiteStaticGraphicClickedHandler);
					websiteStaticGraphic.updateInformation(websiteEntry.mName,
												     	   websiteEntry.mURL,
												           websiteEntry.mType,
												           websiteEntry.mCreatedTime.toString());
					mMyWebsitesAllWebsitesVBox.addChild(websiteStaticGraphic);	
				} 
				 
				/**
				 * 	Set component properties within this canvas
				 */
				if(mCommGroupName.length == 0) {
					mCommunityGroupNameLable.text = "[Name Not Available]";
				}
				else {
					mCommunityGroupNameLable.text = mCommGroupName;
				}
				if(mCreator.length == 0) {
					mCreatorLabel.text = "Created by : [Not Available]";
				}
				else {
					mCreatorLabel.text = "Created by : " + mCreator;
				}
				if(mDateCreated.length == 0) {
					mDateCreatedLabel.text = "Created on : [Not Available]";	
				}
				else {
					var currDate:Date = new Date(int(mDateCreated)*1000); 
					var theDate:String = ((currDate.getMonth()+ 1) + "/" + currDate.getDate() + "/" + currDate.getFullYear());
					mDateCreatedLabel.text = "Created on : " + theDate;
				}
			}
			
			/**
			 * 	Event handler called when the canvas closes.
			 */
			private function hideCanvasHandler(event:Event):void
			{
				if(mSmallXRemoveLabel.visible) {
					mRemoveWebsitesLabel.x = mRemoveWebsitesLabel.x + 50;
					mEditWebsiteLabel.x = mEditWebsiteLabel.x + 50;
					mSeparator1.x = mSeparator1.x + 50;
				}
				
				if(mSmallXEditLabel.visible) {
					mEditWebsiteLabel.x = mEditWebsiteLabel.x + 30;
				}
				
				if(mSmallXRemoveLabel.visible || mSmallXEditLabel.visible) {
					mRemoveWebsitesLabel.setStyle("color", "0x11d30c");
					mEditWebsiteLabel.setStyle("color", "0x11d30c");
					mSmallXRemoveLabel.visible = false;	
					mSmallXEditLabel.visible = false;	
					mRemoveWebsitesLabel.enabled = true;
					mSeparator1.enabled = true;
					mEditWebsiteLabel.enabled = true;
					mMyWebsitesAllWebsitesVBox.enabled = true;
					mMyWebsitesVBox.setStyle("backgroundColor", "0xffffff");
					mMyWebsitesAllWebsitesVBox.setStyle("backgroundColor", "0xffffff");
				}
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							 MEMBER FUNCTIONS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Updates the internal information of this object.
			 */
			public function updateInformation(commGroupName:String,
										      commGroupId:int,
										      creator:String,
										      dateCreated:String,
									     	  websites:ArrayCollection):void
			{
				mCommGroupName = commGroupName;
				mCommGroupId = commGroupId;
				mCreator = creator;
				mDateCreated = dateCreated;
				mWebsites = websites;
			}
			
			/**
			 * 	Inserts a website into the two VBoxes which reside in this canvas at the 0th index.
			 */
			public function addWebsiteToVBoxes(websiteEntry:cWebsiteEntry):void {
				
				var websiteGraphic:cWebsiteGraphic = new cWebsiteGraphic();
				websiteGraphic.addEventListener("cWebsiteGraphicClickedEvent", websiteGraphicClickedHandler);
				websiteGraphic.addEventListener("cEditWebsiteEvent", editWebsiteHandler);
				websiteGraphic.updateInformation(websiteEntry.mName,
											     websiteEntry.mURL,
											     websiteEntry.mType,
											     websiteEntry.mCreatedTime.toString());
				mMyWebsitesVBox.addChildAt(websiteGraphic, 0);
				
				var websiteStaticGraphic:cWebsiteStaticLargeGraphic = new cWebsiteStaticLargeGraphic();
				websiteStaticGraphic.addEventListener("cWebsiteStaticLargeGraphicClickedEvent", websiteStaticGraphicClickedHandler);
				websiteStaticGraphic.updateInformation(websiteEntry.mName,
											     	   websiteEntry.mURL,
											           websiteEntry.mType,
											           websiteEntry.mCreatedTime.toString());
				mMyWebsitesAllWebsitesVBox.addChildAt(websiteStaticGraphic, 0);	
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//							   DATA MEMBERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			// community group name
			private var mCommGroupName:String = "";
			// community group id
			private var mCommGroupId:int = 0;
			// creator of the community
			private var mCreator:String = "";
			// date community group was created
			private var mDateCreated:String = "";
			// websites for the community
			private var mWebsites:ArrayCollection = null;
			
		]]>
	</mx:Script>

	<mx:LinkButton x="10" y="17" text="Back" id="mBackLabel" click="backLabelClickHandler(event)" />
	<mx:Label x="838" y="19" text="Edit" fontSize="12" textDecoration="normal" id="mEditLabel" rollOut="editLabelRollOutHandler(event)" rollOver="editLabelRollOverHandler(event)" click="editLabelClickHandler(event)"/>
	<mx:Label x="885" y="19" text="Add New Website" fontSize="12" textDecoration="normal" id="mAddNewWebsiteLabel" click="addWebsiteClickHandler(event)" rollOut="addWebsiteRollOutHandler(event)" rollOver="addWebsiteRollOverHandler(event)"/>
	<mx:Label x="323" y="153" text="Remove Websites" fontSize="12" textDecoration="normal" id="mRemoveWebsitesLabel" click="removeWebsiteClickHandler(event)" rollOut="removeWebsiteRollOutHandler(event)" rollOver="removeWebsiteRollOverHandler(event)" toolTip="Remove individual websites"/>
	<mx:VRule x="874" y="20" height="16.5" width="3"/>
	<mx:VRule x="500" y="149" height="418" width="3"/>
	<mx:Canvas x="10" y="48" width="64" height="64" id="mIcon" backgroundImage="@Embed(source='../images/sample.jpg')">
	</mx:Canvas>
	<mx:Label x="92" y="46" text="Some Community Group Name" fontSize="24" id="mCommunityGroupNameLable" width="724"/>
	<mx:Label x="10" y="149" text="My Websites" fontSize="16" textDecoration="underline"/>
	<mx:Label x="563" y="149" text="All Websites" fontSize="16" textDecoration="underline"/>
	<mx:VBox x="10" y="182" height="385" width="430" id="mMyWebsitesVBox" verticalScrollPolicy="on">
	</mx:VBox>
	<mx:VBox height="385" width="426" id="mMyWebsitesAllWebsitesVBox" x="563" y="182" verticalScrollPolicy="on" disabledColor="#000000" >
	</mx:VBox>
	<mx:Label x="92" y="81" text="Created by : Mariusz Choroszy" id="mCreatorLabel" width="349"/>
	<mx:Label x="92" y="94" text="Date Created : December 12, 2030" id="mDateCreatedLabel" width="349"/>
	<mx:Canvas x="400" y="153" width="20" height="20" click="smallXRemoveClickHandler(event)" toolTip="Close the remove website feature" backgroundImage="@Embed(source='../images/smallX.png')" id="mSmallXRemoveLabel"   visible="false">
	</mx:Canvas>
	<mx:Canvas x="279" y="153" width="20" height="20" click="smallXEditClickHandler(event)" toolTip="Close the edit website feature" backgroundImage="@Embed(source='../images/smallX.png')" id="mSmallXEditLabel"   visible="false">
	</mx:Canvas>
	<mx:VRule x="311" y="153" height="21" id="mSeparator1"/>
	<mx:Label x="210" y="153" text="Edit Websites" click="editWebsiteClickHandler(event)" rollOut="editWebsiteRollOutHandler(event)" rollOver="editWebsiteRollOverHandler(event)" fontSize="12" id="mEditWebsiteLabel"/>
</mx:Canvas>
