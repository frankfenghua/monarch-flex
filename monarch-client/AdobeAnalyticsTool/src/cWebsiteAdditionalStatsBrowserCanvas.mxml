<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="showCanvasHandler(event)" show="showCanvasHandler(event)" width="1012" height="616">

	<mx:Metadata>
		[Event(name="OpenCommunityGroupSelectionClickedEvent", type="flash.events.Event")]
		[Event(name="OpenCommunityGroupHomeCanvasEvent",       type="flash.events.Event")]
		[Event(name="OpenCommunityGroupBrowserCanvasEvent",    type="flash.events.Event")]
		[Event(name="OpenRegExCanvasEvent",                    type="cEditWebsiteEvent")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.events.ListEvent;

		
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			// ================================================================================
			// treeLabel
			//    args:  an XML node
			//    ret:   the text that should be displayed in the tree component
			//    about: Tells Flex how to convert the XML into a textual tree.
			// -------------------------------------------------------------------------------- 
			private function treeLabel(item:Object):String
            {
            	if(item.@label != "") {
            		if(item.@rating != "") {
            			return item.@label + " " + item.@rating;
            		}
            		else {
            			// trace("Item label = "+item.@label);
            			return item.@label;
            		}
            	}
            	else {
					return item.name();
            	}
            }

			// TODO: I called the server twice. This time, I got it in normal response form
			//       not a resourceful method.
			private function statResultHandler2(event:ResultEvent):void  
			{
				Alert.show("statResultHandler2 was called");
				
				var i:int = 0; // used as counter in this function
				trace("Load succeeded");
				// Assign to bound variables to implicitly change the text
				numberOfUsers = event.result.detailStats.general.numberUsers;
				postsPerDay = event.result.detailStats.general.postsPerDay;
				postsToday = event.result.detailStats.general.postsToday;
				analyzedPosts = event.result.detailStats.general.analyzedPosts;
				analyzedThreads = event.result.detailStats.general.analyzedThreads;
				
				var chatterboxes:ArrayCollection = event.result.detailStats.general.chatterboxes.user;			
				chatterboxName   = chatterboxes.getItemAt(0).label;
				chatterboxUrl    = chatterboxes.getItemAt(0).url;
				chatterboxRating = chatterboxes.getItemAt(0).rating;
				
				var newbies:ArrayCollection = event.result.detailStats.general.newbies.user;			
				newbieName   = newbies.getItemAt(0).label;
				newbieUrl    = newbies.getItemAt(0).url;
				newbieRating = newbies.getItemAt(0).rating;
				
				var veterans:ArrayCollection = event.result.detailStats.general.veterans.user;			
				veteranName   = veterans.getItemAt(0).label;
				veteranUrl    = veterans.getItemAt(0).url;
				veteranRating = veterans.getItemAt(0).rating;
				
				var livelyThreads:ArrayCollection = event.result.detailStats.general.livelyThreads.user;			
				livelyThreadTitle   = livelyThreads.getItemAt(0).label;
				livelyThreadUrl     = livelyThreads.getItemAt(0).url;
				livelyThreadRating  = livelyThreads.getItemAt(0).rating;
			}

			/**
			 * Called when the stat request returns
			 */
			private function statResultHandler(event:ResultEvent):void  
			{
				Alert.show("original statResultHandler was called");

				var i:int = 0; // used as counter in this function

				// Assign to bound variables to implicitly change the text
				numberOfUsers = statRequester.lastResult[0].general.numberUsers;
				postsPerDay = statRequester.lastResult[0].general.postsPerDay;
				postsToday = statRequester.lastResult[0].general.postsToday;
				analyzedPosts = statRequester.lastResult[0].general.analyzedPosts;
				analyzedThreads = statRequester.lastResult[0].general.analyzedThreads;
				
				trace(statRequester.lastResult.general);
				var chatterboxes:XMLList = statRequester.lastResult[0].general.chatterboxes.user;
				trace(chatterboxes);		
				chatterboxName   = chatterboxes[0].@label;
				chatterboxUrl    = chatterboxes[0].@url;
				chatterboxRating = chatterboxes[0].@rating;
				
				var newbies:XMLList = statRequester.lastResult[0].general.newbies.user;			
				newbieName   = newbies[0].@label;
				newbieUrl    = newbies[0].@url;
				newbieRating = newbies[0].@rating;
				
				var veterans:XMLList = statRequester.lastResult[0].general.veterans.user;			
				veteranName   = veterans[0].@label;
				veteranUrl    = veterans[0].@url;
				veteranRating = veterans[0].@rating;
				
				var livelyThreads:XMLList = statRequester.lastResult[0].general.livelyThreads.thread;			
				livelyThreadTitle   = livelyThreads[0].@label;
				livelyThreadUrl     = livelyThreads[0].@url;
				livelyThreadRating  = livelyThreads[0].@rating;
				/*
				// Set keywords HTML
				tempString = "";
				var keywords:ArrayCollection = event.result.detailStats.keywords.keyword;
				for(i = 0; i < keywords.length; i++) {
					// Print word
					var j:int = 0;
					tempString += keywords.getItemAt(i).word + "\n";
					trace("Keyword "+i+" of "+keywords.length);
					
					tempString += "Favorable threads:";
					var loveThreads:ArrayCollection = keywords.getItemAt(i).loveThreads.thread;
					for(j = 0; j < loveThreads.length; j++) {
						tempString += "<a href=\""+loveThreads.getItemAt(j).url+"\">"+loveThreads.getItemAt(j).title+"</a> Rating="+loveThreads.getItemAt(j).rating+"\n";
					}
					
					tempString += "Unfavorable threads:";
					var hateThreads:ArrayCollection = keywords.getItemAt(i).hateThreads.thread;
					for(j = 0; j < hateThreads.length; j++) {
						tempString += "<a href=\""+hateThreads.getItemAt(j).url+"\">"+hateThreads.getItemAt(j).title+"</a> Rating="+hateThreads.getItemAt(j).rating+"\n";
					}
					
					tempString += "Hot threads:";
					var hotThreads:ArrayCollection = keywords.getItemAt(i).hotThreads.thread;
					for(j = 0; j < hotThreads.length; j++) {
						tempString += "<a href=\""+hotThreads.getItemAt(j).url+"\">"+hotThreads.getItemAt(j).title+"</a> Rating="+hotThreads.getItemAt(j).rating+"\n";
					}
					
					tempString += "Ass kissers:";
					var assKissers:ArrayCollection = keywords.getItemAt(i).assKissers.user;
					for(j = 0; j < assKissers.length; j++) {
						tempString += "<a href=\""+assKissers.getItemAt(j).url+"\">"+assKissers.getItemAt(j).title+"</a> Rating="+assKissers.getItemAt(j).rating+"\n";
					}
					
					tempString += "Trash talkers:";
					var trashTalkers:ArrayCollection = keywords.getItemAt(i).trashTalkers.user;
					for(j = 0; j < trashTalkers.length; j++) {
						tempString += "<a href=\""+trashTalkers.getItemAt(j).url+"\">"+trashTalkers.getItemAt(j).title+"</a> Rating="+trashTalkers.getItemAt(j).rating+"\n";
					}
					
					tempString += "Chatterboxes:";
					var kChatterboxes:ArrayCollection = keywords.getItemAt(i).chatterboxes.user;
					for(j = 0; j < kChatterboxes.length; j++) {
						tempString += "<a href=\""+kChatterboxes.getItemAt(j).url+"\">"+kChatterboxes.getItemAt(j).title+"</a> Rating="+kChatterboxes.getItemAt(j).rating+"\n";
					}
					
					tempString += "Sophisticated orators:";
					var sophisticatedOrators:ArrayCollection = keywords.getItemAt(i).sophisticatedOrators.user;
					for(j = 0; j < sophisticatedOrators.length; j++) {
						tempString += "<a href=\""+sophisticatedOrators.getItemAt(j).url+"\">"+sophisticatedOrators.getItemAt(j).title+"</a> Rating="+sophisticatedOrators.getItemAt(j).rating+"\n";
					}
					
				}
				trace(tempString.length);
				keywordsHTML = tempString;
				*/
			}
		
			private function treeClickHandler(event:ListEvent):void
			{
				var node:XML = event.currentTarget.selectedItem;
				
				// If this is a leaf node then do something
				if(node.elements().length() == 0) {
					// trace("This is leaf");
					navigateToURL(new URLRequest(node.@url), "_blank");
				}
			}
			
			/**
			 * 	Called when the user clicks on the home label.
			 */
			private function homeLabelClickHandler(event:Event):void
			{
				var e:Event = new Event("OpenCommunityGroupHomeCanvasEvent");
				this.dispatchEvent(e);
			}
					
			/**
			 * 	Called when the user clicks on the community label.
			 */
			private function communityLabelClickHandler(event:Event):void
			{
				var e:Event = new Event("OpenCommunityGroupSelectionClickedEvent");
				this.dispatchEvent(e);
			}
			
			
			/**
			 * 	Called when the user clicks on the community group name label.
			 */
			private function communityNameLabelClickHandler(event:Event):void
			{
				var e:Event = new Event("OpenCommunityGroupBrowserCanvasEvent");
				this.dispatchEvent(e);
			}
			
			/**
			 * 	Called when the user clicks on the edit website button.
			 */
			private function editWebsiteButtonClickHandler(event:Event):void
			{
				var e:cEditWebsiteEvent = new cEditWebsiteEvent("OpenRegExCanvasEvent");
				e.mWebsiteName = mWebsiteName;
				e.mCommunityGroupName = mCommunityGroupName;
				this.dispatchEvent(e);
			}
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   CANVAS EVENT HANDLERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Called when the canvas is displayed.
			 */
			private function showCanvasHandler(event:Event):void
			{
				mCommunityGroupNameLabel.label = mCommunityGroupName;
				mWebsiteNameLabel.text = mWebsiteName;
				mCommunityGroupNameLabel.x =+ mSep2.x + mSep2.measureText(mSep2.text).width + 10;
				mSep3.x =+ mCommunityGroupNameLabel.x + mCommunityGroupNameLabel.width + 10;
				mWebsiteNameLabel.x =+ mSep3.x + mSep3.measureText(mSep3.text).width + 10;
			}
			
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   MEMBER FUNCTIONS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			/**
			 * 	Updates the internal information of this object.
			 */
			public function updateInformation(websiteName:String,
											  communityName:String):void
			{
				mCommunityGroupName = communityName;
				mWebsiteName = websiteName;	
				
				// Send a request to the server for stats for this object
				trace("Sent stats request");
				statRequester.send({"websiteName":mWebsiteName});
			}
			
			///////////////////////////////////////////////////////////////////////////////////
			//
			//						   DATA MEMBERS
			//
			///////////////////////////////////////////////////////////////////////////////////
			
			// name of the community group
			private var mCommunityGroupName:String = "";
			// name of the website 
			private var mWebsiteName:String = "";
			
			private var mStatsArray:ArrayCollection;
			
			[Bindable]
			private var numberOfUsers:int = 0;
			
			[Bindable]
			private var postsPerDay:Number = 0;
			
			[Bindable]
			private var postsToday:int = 0;
			
			[Bindable]
			private var analyzedPosts:int = 0;
			
			[Bindable]
			private var analyzedThreads:int = 0;
	
			[Bindable]
			private var chatterboxName:String = "not enough activity on website for this stat";
			
			[Bindable]
			private var chatterboxUrl:String = "http://www.error.com"; // TODO: create 404 error page
			
			[Bindable]
			private var chatterboxRating:Number = 0; 
			
			[Bindable]
			private var newbieName:String = "not enough activity on website for this stat";
			
			[Bindable]
			private var newbieUrl:String = "http://www.error.com"; // TODO: create 404 error page
			
			[Bindable]
			private var newbieRating:Number = 0;
			
			[Bindable]
			private var veteranName:String = "not enough activity on website for this stat";
			
			[Bindable]
			private var veteranUrl:String = "http://www.error.com"; // TODO: create 404 error page
			
			[Bindable]
			private var veteranRating:Number = 0;
			
			[Bindable]
			private var livelyThreadTitle:String = "not enough activity on website for this stat";
			
			[Bindable]
			private var livelyThreadUrl:String = "http://www.error.com"; // TODO: create 404 error page
			
			[Bindable]
			private var livelyThreadRating:Number = 0;
			
			[Bindable]
			private var SERVER_URL:String = Constants.SERVER_URL+"monarch/Client/";	
			
		]]>
	</mx:Script>
	<mx:XMLListCollection id="keywordsTree" source="{statRequester.lastResult.keywords.keyword}"/>
	<mx:HTTPService id="statRequester2" method="GET" url="{SERVER_URL}detailStats.php" result="statResultHandler2(event)" />
	<mx:HTTPService id="statRequester" method="GET" url="{SERVER_URL}detailStats.php" result="statResultHandler(event)" resultFormat="e4x"/>	
	<mx:LinkButton click="homeLabelClickHandler(event)" label="Home" id="mHomeLabel" top="2" left="0" />
	<mx:LinkButton click="communityLabelClickHandler(event)" label="My Community Groups" id="mCommunityGroupLabel" top="1" left="79" />
	<mx:LinkButton click="communityNameLabelClickHandler(event)" id="mCommunityGroupNameLabel" top="2" left="267" />
	<mx:Label text="Website Name" id="mWebsiteNameLabel" styleName="pageTitle"  top="1" left="358.5"/>
	<mx:Label text="&gt;" styleName="breadCrumbSeparator"  top="-1" left="58" id="mSep1"/>
	<mx:Label text="&gt;" styleName="breadCrumbSeparator"  top="-1" left="240" id="mSep2"/>
	<mx:Label text="&gt;" styleName="breadCrumbSeparator"  id="mSep3" top="0" left="335"/>
	<mx:Button useHandCursor="true" buttonMode="true" mouseChildren="false" label="Edit Website" styleName="buttonBlack" click="editWebsiteButtonClickHandler(event)" id="mEditWebsiteButton" horizontalCenter="447" verticalCenter="-293" fontWeight="bold" fontStyle="normal" cornerRadius="5" icon="@Embed(source='../images/pencil.png')"/>
	<mx:Panel x="6" y="50" width="494.5" height="349" layout="absolute" title="General">
		<mx:Label 
			text="posts per day:" 
			x="10" 
		 	y="10"
			toolTip="the average number of new posts per day"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{postsPerDay}" 
			x="130" 
		 	y="70"
			toolTip="the average number of new posts per day"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="posts today:" 
			x="10" 
			y="40" 
			toolTip="the number of new posts made today"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{postsToday}" 
			x="130" 
		 	y="40"
			toolTip="the number of new posts made today"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="posts analyzed:" 
			x="10" 
			y="70"
			toolTip="the total number of posts Monarch has analyzed since you added this website"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{analyzedPosts}" 
			x="130" 
		 	y="10"
			toolTip="the total number of posts Monarch has analyzed since you added this website"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="threads analyzed:" 
			x="10"
			y="100"
			toolTip="the total number of posts Monarch has analyzed since you added this website"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{analyzedThreads}" 
			x="130" 
		 	y="100"
			toolTip="the total number of posts Monarch has analyzed since you added this website"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="users:" 
			x="10"
			y="130"
			toolTip="the total number of people that have posted at least once since you added this site to Monarch"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{numberOfUsers}" 
			x="130" 
		 	y="130"
			toolTip="the total number of people that have posted at least once since you added this site to Monarch"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="chatterbox:" 
			x="10"
			y="160"
			toolTip="user with most posts"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{chatterboxRating} posts" 
			x="130"
			y="160"
			toolTip="user with most posts"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:LinkButton
			label="{chatterboxName}"
			x="223" 
		 	y="160"
			toolTip="user with most posts"
			click="navigateToURL(new URLRequest('http://www.error.com'), '_blank')"
		/>
		<mx:Label 
			text="newbie:" 
			x="10"
			y="190"
			toolTip="the newest person that joined this website"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="joined {newbieRating}" 
			x="130"
			y="190"
			toolTip="user with most posts"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:LinkButton
			label="{newbieName}"
			x="223" 
		 	y="190"
			toolTip="the newest user that joined this website"
			click="navigateToURL(new URLRequest('http://www.error.com'), '_blank')"
		/>
		<mx:Label 
			text="veteran:" 
			x="10"
			y="220"
			toolTip="the user that joined the website earliest (that Monarch knows of)"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:LinkButton
			label="{veteranName}"
			x="223" 
		 	y="220"
			toolTip="the user that joined the website earliest (that Monarch knows of)"
			click="navigateToURL(new URLRequest('http://www.error.com'), '_blank')"
		/>
		<mx:Label 
			text="joined {veteranRating}" 
			x="130"
			y="220"
			toolTip="user with most posts"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:Label 
			text="lively thread:" 
			x="10"
			y="250"
			toolTip="the thread with the most replies (that Monarch knows of)"
			styleName="websiteGeneralInfoCategory"
		/>
		<mx:Label 
			text="{livelyThreadRating} posts" 
			x="130"
			y="250"
			toolTip="user with most posts"
			styleName="websiteGeneralInfoRating"
		/>
		<mx:LinkButton
			label="{livelyThreadTitle}"
			x="223" 
		 	y="250"
			toolTip="the thread with the most replies (that Monarch knows of)"
			click="navigateToURL(new URLRequest('http://www.error.com'), '_blank')"
		/>
	</mx:Panel>
	<mx:Panel x="6" y="407" width="494.5" height="200" layout="absolute" title="Links Spoken">
		<mx:Text x="5" y="10">
		    <mx:htmlText>
                <![CDATA[Most mentioned: <a href="http://fuck.com">Fuck.com</a><br /> (99123)&#xa;Least mentioned: hoe.com (4)&#xa;Most favorable: shit.com (+56.2)&#xa;Least favorable: damn.com (-12.5)&#xa;Spoken with bad English: bitch.com (-0.82)&#xa;Spoken with best English: nigger.com (0.99)"]]>
            </mx:htmlText>
        </mx:Text>
	</mx:Panel>
	<mx:Panel x="508" y="50" width="494" height="556" layout="absolute" title="Keywords">
		<mx:Tree id="tree" top="10" left="10" dataProvider="{keywordsTree}" labelFunction="treeLabel" itemClick="treeClickHandler(event)" width="470" height="505" showRoot="true"/>	</mx:Panel>
	
</mx:Canvas>
